{"version":3,"sources":["Solutions/02-Destructuring/es6scripts/script.js"],"names":["numbers","document","addEventListener","getElementById","doAdd","numberElem","number","parseInt","value","push","item0","item1","itemOthers","setHtml","join","stats","sum","average","find","n","negPosition","position","negValue","oddPosition","oddValue","selector","html","element","querySelector","innerHTML","i","length","predicate","num"],"mappings":"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","sourcesContent":["const numbers = []\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    document.getElementById('add').addEventListener('click', doAdd)\r\n})\r\n\r\nfunction doAdd() {\r\n\r\n\tconst numberElem = document.getElementById('number')\r\n    const number = parseInt(numberElem.value)\r\n    numbers.push(number)\r\n    numberElem.value = ''\r\n\t\r\n    // Exercise 2 - Array destructuring.\r\n    const [item0, item1, ...itemOthers] = numbers\r\n    setHtml('#item0', item0)\r\n    setHtml('#item1', item1)\r\n    setHtml('#itemOthers', itemOthers.join(', '))\r\n\r\n    // Exercise 3 - Object destructuring.\r\n    const {sum, average} = stats()\r\n    setHtml('#sum', sum)\r\n    setHtml('#average', average)\r\n\r\n    // Exercise 4 - More object destructuring.\r\n    const {position: negPosition, value: negValue = 'n/a'} = find(n => n < 0)\r\n    setHtml('#negPosition', negPosition)\r\n    setHtml('#negValue', negValue)\r\n\r\n    const {position: oddPosition, value: oddValue = 'n/a'} = find(n => n % 2 != 0)\r\n    setHtml('#oddPosition', oddPosition)\r\n    setHtml('#oddValue', oddValue)\r\n}\r\n\r\nfunction setHtml(selector, html) {\r\n\tconst element = document.querySelector(selector)\r\n\tif (element) {\r\n\t\telement.innerHTML = html\r\n\t}\r\n}\r\n\r\nfunction stats() {\r\n    let sum = 0\r\n    for (let i in numbers) {\r\n        sum += numbers[i]\r\n    }\r\n    return {sum: sum, average: sum/numbers.length}\r\n}\r\n\r\nfunction find(predicate) {\r\n    let sum = 0\r\n    for (let i in numbers) {\r\n        let num = numbers[i]\r\n        if (predicate(num)) {\r\n            return {position: i, value: num}\r\n        }\r\n    }\r\n    return {position: -1}\r\n}"],"file":"script.js"}